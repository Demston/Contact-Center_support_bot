"""–¢–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∫–æ–Ω—Ç–∞–∫—Ç-—Ü–µ–Ω—Ç—Ä–∞"""

import telebot
from telebot import types
from config import *

bot = telebot.TeleBot(token())
chat = chat_id()


@bot.message_handler(commands=['start'])
def welcome(message):
    """–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ. –ö–Ω–æ–ø–æ—á–Ω–æ–µ –º–µ–Ω—é."""
    global chat
    member = bot.get_chat_member(chat_id=chat, user_id=message.from_user.id)
    statuses = ('creator', 'administrator', 'member')
    if message.chat.type == 'private':
        if member.status in statuses:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            button1 = types.KeyboardButton('–ü–ö üñ•Ô∏è')
            button2 = types.KeyboardButton('Citrix üåÄ')
            button3 = types.KeyboardButton('–°–≤—è–∑—å üéß')
            button4 = types.KeyboardButton('–ü–æ—á—Ç–∞ üìß')
            button5 = types.KeyboardButton('–ë—Ä–∞—É–∑–µ—Ä üåê')
            button6 = types.KeyboardButton('–ü–∞—Ä–æ–ª–∏ üîì')
            button7 = types.KeyboardButton('–î–æ—Å—Ç—É–ø—ã üìÑ')
            button8 = types.KeyboardButton('–ü—Ä–∏–Ω—Ç–µ—Ä üñ®Ô∏è')
            markup.add(button1, button2, button3, button4, button5, button6,
                       button7, button8)
            bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç, {0.first_name}! –Ø –±–æ—Ç –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –Ω–∞—à–µ–≥–æ –ö–¶, '
                                              '–∫–æ—Ç–æ—Ä—ã–π –ø–æ—Å—Ç–∞—Ä–∞–µ—Ç—Å—è —Ç–µ–±–µ –ø–æ–º–æ—á—å! –í–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –∫–Ω–æ–ø–∫–∞–º–∏ –º–µ–Ω—é.'
                             .format(message.from_user, bot.get_me()), parse_mode='html',
                             reply_markup=markup)
        else:
            bot.send_message(message.chat.id, '–¢—ã –Ω–µ –≤ —Å–ø–∏—Å–∫–µ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö üòé \n–ü–æ –∫—Ä–∞–π–Ω–µ–π –º–µ—Ä–µ –ø–æ–∫–∞')


@bot.message_handler(commands=['info'])
def info(message):
    """–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å"""
    global chat
    member = bot.get_chat_member(chat_id=chat, user_id=message.from_user.id)
    statuses = ('creator', 'administrator', 'member')
    if message.chat.type == 'private':
        if member.status in statuses:
            contacts = open('contacts.txt', encoding='UTF-8').read()
            bot.send_message(message.chat.id, f'–ß—Ç–æ–±—ã –ø–æ–º–æ—á—å –Ω–∞–º —É–ª—É—á—à–∏—Ç—å –±–æ—Ç–∞, –ø–∏—à–∏—Ç–µ –ø–∏—Å—å–º–∞/—Å–æ–æ–±—â–µ–Ω–∏—è —Å '
                                              f'–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º–∏ –∏ –∑–∞–º–µ—á–∞–Ω–∏—è–º–∏: {contacts}', parse_mode='html')
        else:
            bot.send_message(message.chat.id, '–¢—ã –Ω–µ –≤ —Å–ø–∏—Å–∫–µ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö üòé \n–ü–æ –∫—Ä–∞–π–Ω–µ–π –º–µ—Ä–µ –ø–æ–∫–∞')


@bot.message_handler(content_types=['text'])
def dialog(message):
    """–†–∞–±–æ—Ç–∞ —Å —Ç–µ–∫—Å—Ç–æ–≤—ã–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏"""
    global chat
    member = bot.get_chat_member(chat_id=chat, user_id=message.from_user.id)
    statuses = ('creator', 'administrator', 'member')
    if message.chat.type == 'private':
        if member.status in statuses:
            if message.text == 'Citrix üåÄ':
                markup = types.InlineKeyboardMarkup()
                markup.add(types.InlineKeyboardButton('–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¶–∏—Ç—Ä–∏–∫—Å –Ω–∞ –ª–∏—á–Ω—ã–π –ü–ö', callback_data='citrix_setup'))
                markup.add(types.InlineKeyboardButton('–¶–∏—Ç—Ä–∏–∫—Å –ø—Ä–æ—Å–∏—Ç –∞–¥—Ä–µ—Å —Å–µ—Ä–≤–µ—Ä–∞', callback_data='citrix_address'))
                markup.add(types.InlineKeyboardButton('–ó–∞–≤–∏—Å–∞–µ—Ç –¶–∏—Ç—Ä–∏–∫—Å, –ª–∞–≥–∞–µ—Ç —Å–≤—è–∑—å', callback_data='citrix_lags'))
                markup.add(types.InlineKeyboardButton('–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¶–∏—Ç—Ä–∏–∫—Å–∞', callback_data='citrix_update'))
                bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏ –∏–∑ —Å–ø–∏—Å–∫–∞:', reply_markup=markup)
            if message.text == '–°–≤—è–∑—å üéß':
                markup = types.InlineKeyboardMarkup()
                markup.add(types.InlineKeyboardButton('–ü—Ä–æ–ø–∞–ª –∑–≤—É–∫', callback_data='lose_sound'))
                markup.add(types.InlineKeyboardButton('–ù–µ –º–µ–Ω—è–µ—Ç—Å—è —Å—Ç–∞—Ç—É—Å', callback_data='softphone_statuses'))
                bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏ –∏–∑ —Å–ø–∏—Å–∫–∞:', reply_markup=markup)
            if message.text == 'Outlook üìß':
                markup = types.InlineKeyboardMarkup()
                markup.add(types.InlineKeyboardButton('–ü–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω–∞ –ø–æ—á—Ç–∞, –∞—Ä—Ö–∏–≤', callback_data='full_mail'))
                bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏ –∏–∑ —Å–ø–∏—Å–∫–∞:', reply_markup=markup)
            if message.text == '–ü–ö üñ•Ô∏è':
                markup = types.InlineKeyboardMarkup()
                markup.add(types.InlineKeyboardButton('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—Ö–æ–¥–µ –≤ –ü–ö', callback_data='pc_not_in_domain'))
                markup.add(types.InlineKeyboardButton('–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞ 2 –º–æ–Ω–∏—Ç–æ—Ä–∞', callback_data='two_monitors'))
                bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏ –∏–∑ —Å–ø–∏—Å–∫–∞:', reply_markup=markup)
            if message.text == '–ü–∞—Ä–æ–ª—å üîì':
                markup = types.InlineKeyboardMarkup()
                markup.add(types.InlineKeyboardButton('–ö–∞–∫ —Å–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å –æ—Ç —Å–∏—Å—Ç–µ–º—ã',
                                                      callback_data='domain_pass_change'))
                markup.add(types.InlineKeyboardButton('–ü–∞—Ä–æ–ª—å –æ—Ç –≤—Ç–æ—Ä–æ–π –£–ó',
                                                      callback_data='another_password'))
                bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏ –∏–∑ —Å–ø–∏—Å–∫–∞:', reply_markup=markup)
            if message.text == '–ë—Ä–∞—É–∑–µ—Ä üåê':
                markup = types.InlineKeyboardMarkup()
                markup.add(types.InlineKeyboardButton('–ë—Ä–∞—É–∑–µ—Ä –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é', callback_data='default_browser'))
                markup.add(types.InlineKeyboardButton('–ö–∞–∫ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∑–∞–∫–ª–∞–¥–∫–∏', callback_data='bookmarks'))
                markup.add(types.InlineKeyboardButton('–û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞', callback_data='clean_cache'))
                bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏ –∏–∑ —Å–ø–∏—Å–∫–∞:', reply_markup=markup)
            if message.text == '–ü—Ä–∏–Ω—Ç–µ—Ä üñ®Ô∏è':
                markup = types.InlineKeyboardMarkup()
                markup.add(types.InlineKeyboardButton('–ü–µ—á–∞—Ç—å –Ω–∞ –ø—Ä–∏–Ω—Ç–µ—Ä–µ', callback_data='print_on_printer'))
                bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏ –∏–∑ —Å–ø–∏—Å–∫–∞:', reply_markup=markup)


@bot.callback_query_handler(func=lambda call: True)
def callback_instructions(call):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∏–∞–ª–æ–≥–∞ —á–µ—Ä–µ–∑ –∏–Ω–ª–∞–π–Ω–æ–≤—ã–µ –∫–Ω–æ–ø–∫–∏"""
    global chat
    member = bot.get_chat_member(chat_id=chat, user_id=call.from_user.id)
    statuses = ('creator', 'administrator', 'member')
    if member.status in statuses:
        if call.message:
            if call.data == 'citrix_setup':
                ctx_home_part_1 = open('ctx_home_part_1.txt', encoding='UTF-8').read()
                ctx_home_1 = open('ctx_home_1.png', 'rb')
                ctx_home_2 = open('ctx_home_2.png', 'rb')
                bot.send_message(call.message.chat.id, text=ctx_home_part_1)
                bot.send_photo(call.message.chat.id, ctx_home_1)
                bot.send_photo(call.message.chat.id, ctx_home_2)
                ctx_home_part_2 = open('ctx_home_part_2.txt', encoding='UTF-8').read()
                ctx_home_3 = open('ctx_home_3.png', 'rb')
                bot.send_message(call.message.chat.id, text=ctx_home_part_2)
                bot.send_photo(call.message.chat.id, ctx_home_3)
                ctx_home_part_3_1 = open('ctx_home_part_3_1.txt', encoding='UTF-8').read()
                ctx_home_4 = open('ctx_home_4.png', 'rb')
                bot.send_message(call.message.chat.id, text=ctx_home_part_3_1)
                bot.send_photo(call.message.chat.id, ctx_home_4)
                ctx_home_part_3_2 = open('ctx_home_part_3_2.txt', encoding='UTF-8').read()
                ctx_home_5 = open('ctx_home_5.png', 'rb')
                bot.send_message(call.message.chat.id, text=ctx_home_part_3_2)
                bot.send_photo(call.message.chat.id, ctx_home_5)
                ctx_home_part_4 = open('ctx_home_part_4.txt', encoding='UTF-8').read()
                ctx_home_6 = open('ctx_home_6.png', 'rb')
                bot.send_message(call.message.chat.id, text=ctx_home_part_4)
                bot.send_photo(call.message.chat.id, ctx_home_6)
                ctx_home_part_5 = open('ctx_home_part_5.txt', encoding='UTF-8').read()
                ctx_home_7 = open('ctx_home_7.png', 'rb')
                bot.send_message(call.message.chat.id, text=ctx_home_part_5)
                bot.send_photo(call.message.chat.id, ctx_home_7)
                ctx_home_part_6 = open('ctx_home_part_6.txt', encoding='UTF-8').read()
                bot.send_message(call.message.chat.id, text=ctx_home_part_6)
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text='–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¶–∏—Ç—Ä–∏–∫—Å –Ω–∞ –ª–∏—á–Ω—ã–π –ü–ö:', reply_markup=None)
            if call.data == 'citrix_address':
                ctx_server = open('ctx_server.txt', encoding='UTF-8').read()
                ctx_server_pic = open('ctx_server_pic.png', 'rb')
                bot.send_message(call.message.chat.id, text=ctx_server)
                bot.send_photo(call.message.chat.id, ctx_server_pic)
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text='–¶–∏—Ç—Ä–∏–∫—Å –ø—Ä–æ—Å–∏—Ç –∞–¥—Ä–µ—Å —Å–µ—Ä–≤–µ—Ä–∞:', reply_markup=None)
            if call.data == 'citrix_lags':
                ctx_network_trouble = open('ctx_network_trouble.txt', encoding='UTF-8').read()
                ctx_network_trouble_1_1 = open('ctx_network_trouble_1_1.txt', encoding='UTF-8').read()
                ctx_network_trouble_1_2 = open('ctx_network_trouble_1_2.txt', encoding='UTF-8').read()
                ctx_network_trouble_2 = open('ctx_network_trouble_2.txt', encoding='UTF-8').read()
                ctx_network_trouble_3 = open('ctx_network_trouble_3.txt', encoding='UTF-8').read()
                ctx_network = open('ctx_network.png', 'rb')
                ctx_network_1 = open('ctx_network_1.png', 'rb')
                ctx_network_2 = open('ctx_network_2.png', 'rb')
                ctx_network_3 = open('ctx_network_3.png', 'rb')
                bot.send_message(call.message.chat.id, text=ctx_network_trouble)
                bot.send_photo(call.message.chat.id, ctx_network)
                bot.send_message(call.message.chat.id, text=ctx_network_trouble_1_1)
                bot.send_photo(call.message.chat.id, ctx_network_1)
                bot.send_message(call.message.chat.id, text=ctx_network_trouble_1_2)
                bot.send_message(call.message.chat.id, text=ctx_network_trouble_2)
                bot.send_photo(call.message.chat.id, ctx_network_2)
                bot.send_message(call.message.chat.id, text=ctx_network_trouble_3)
                bot.send_photo(call.message.chat.id, ctx_network_3)
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text='–ó–∞–≤–∏—Å–∞–µ—Ç –¶–∏—Ç—Ä–∏–∫—Å, –ª–∞–≥–∞–µ—Ç —Å–≤—è–∑—å:', reply_markup=None)
            if call.data == 'citrix_update':
                ctx_update_1 = open('ctx_update_1.txt', encoding='UTF-8').read()
                ctx_update_2 = open('ctx_update_2.txt', encoding='UTF-8').read()
                ctx_update_3 = open('ctx_update_3.txt', encoding='UTF-8').read()
                ctx_update_4 = open('ctx_update_4.txt', encoding='UTF-8').read()
                ctx_update_del = open('ctx_update_del.png', 'rb')
                ctx_home_4 = open('ctx_home_4.png', 'rb')
                ctx_home_5 = open('ctx_home_5.png', 'rb')
                ctx_home_6 = open('ctx_home_6.png', 'rb')
                bot.send_message(call.message.chat.id, text=ctx_update_1)
                bot.send_photo(call.message.chat.id, ctx_update_del)
                bot.send_message(call.message.chat.id, text=ctx_update_2)
                bot.send_photo(call.message.chat.id, ctx_home_4)
                bot.send_photo(call.message.chat.id, ctx_home_5)
                bot.send_message(call.message.chat.id, text=ctx_update_3)
                bot.send_photo(call.message.chat.id, ctx_home_6)
                bot.send_message(call.message.chat.id, text=ctx_update_4)
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text='–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¶–∏—Ç—Ä–∏–∫—Å–∞:', reply_markup=None)
            if call.data == 'lose_sound':
                softphone_sound_1 = open('softphone_sound_1.txt', encoding='UTF-8').read()
                softphone_sound_2 = open('softphone_sound_2.txt', encoding='UTF-8').read()
                softphone_sound_3_0 = open('softphone_sound_3_0.txt', encoding='UTF-8').read()
                softphone_sound_3_1 = open('softphone_sound_3_1.txt', encoding='UTF-8').read()
                softphone_sound_3_2 = open('softphone_sound_3_2.txt', encoding='UTF-8').read()
                softphone_sound_3_3 = open('softphone_sound_3_3.txt', encoding='UTF-8').read()
                softphone_sound_3_4 = open('softphone_sound_3_4.txt', encoding='UTF-8').read()
                softphone_sound_3_5 = open('softphone_sound_3_5.txt', encoding='UTF-8').read()
                softphone_sound_3 = open('softphone_sound_3.txt', encoding='UTF-8').read()
                softphone_sound_4 = open('softphone_sound_4.txt', encoding='UTF-8').read()
                softphone_sound_pic1 = open('softphone_sound_pic1.png', 'rb')
                softphone_sound_pic2 = open('softphone_sound_pic2.png', 'rb')
                softphone_sound_pic3_2 = open('softphone_sound_pic3_2.png', 'rb')
                softphone_sound_pic4 = open('softphone_sound_pic4.png', 'rb')
                softphone_sound_pic5 = open('softphone_sound_pic5.png', 'rb')
                softphone_sound_pic6 = open('softphone_sound_pic6.png', 'rb')
                softphone_sound_pic6_2 = open('softphone_sound_pic6_2.png', 'rb')
                softphone_sound_pic7 = open('softphone_sound_pic7.png', 'rb')
                softphone_sound_pic8 = open('softphone_sound_pic8.png', 'rb')
                bot.send_message(call.message.chat.id, text=softphone_sound_1)
                bot.send_photo(call.message.chat.id, softphone_sound_pic1)
                bot.send_message(call.message.chat.id, text=softphone_sound_2)
                bot.send_photo(call.message.chat.id, softphone_sound_pic2)
                bot.send_message(call.message.chat.id, text=softphone_sound_3)
                bot.send_message(call.message.chat.id, text=softphone_sound_3_0)
                bot.send_message(call.message.chat.id, text=softphone_sound_3_1)
                bot.send_photo(call.message.chat.id, softphone_sound_pic3_2)
                bot.send_message(call.message.chat.id, text=softphone_sound_3_2)
                bot.send_photo(call.message.chat.id, softphone_sound_pic4)
                bot.send_message(call.message.chat.id, text=softphone_sound_3_3)
                bot.send_photo(call.message.chat.id, softphone_sound_pic5)
                bot.send_message(call.message.chat.id, text=softphone_sound_3_4)
                bot.send_photo(call.message.chat.id, softphone_sound_pic6)
                bot.send_message(call.message.chat.id, text=softphone_sound_3_5)
                bot.send_photo(call.message.chat.id, softphone_sound_pic6_2)
                bot.send_message(call.message.chat.id, text=softphone_sound_4)
                bot.send_photo(call.message.chat.id, softphone_sound_pic7)
                bot.send_photo(call.message.chat.id, softphone_sound_pic8)
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text='–ü—Ä–æ–ø–∞–ª –∑–≤—É–∫:', reply_markup=None)
            if call.data == 'softphone_statuses':
                softphone_status = open('softphone_status.txt', encoding='UTF-8').read()
                softphone_status_pic = open('softphone_status_pic.png', 'rb')
                bot.send_message(call.message.chat.id, text=softphone_status)
                bot.send_photo(call.message.chat.id, softphone_status_pic)
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text='–ù–µ –º–µ–Ω—è–µ—Ç—Å—è —Å—Ç–∞—Ç—É—Å:', reply_markup=None)
            if call.data == 'full_mail':
                outlook_ar = open('outlook_ar.txt', encoding='UTF-8').read()
                outlook_ar_pic1 = open('outlook_ar_pic1.png', 'rb')
                outlook_ar_pic2 = open('outlook_ar_pic2.png', 'rb')
                bot.send_message(call.message.chat.id, text=outlook_ar)
                bot.send_photo(call.message.chat.id, outlook_ar_pic1)
                bot.send_photo(call.message.chat.id, outlook_ar_pic2)
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text='–ü–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω–∞ –ø–æ—á—Ç–∞, –∞—Ä—Ö–∏–≤:', reply_markup=None)
            if call.data == 'pc_not_in_domain':
                pc_not_domian = open('pc_not_domian.txt', encoding='UTF-8').read()
                pc_not_domian_pic = open('pc_not_domian_pic.png', 'rb')
                bot.send_message(call.message.chat.id, text=pc_not_domian)
                bot.send_photo(call.message.chat.id, pc_not_domian_pic)
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text='–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—Ö–æ–¥–µ –≤ –ü–ö:', reply_markup=None)
            if call.data == 'two_monitors':
                pc_ctx_monitor_1 = open('pc_ctx_monitor_1.txt', encoding='UTF-8').read()
                pc_ctx_monitor_pic1 = open('pc_ctx_monitor_pic1.png', 'rb')
                pc_ctx_monitor_2 = open('pc_ctx_monitor_2.txt', encoding='UTF-8').read()
                pc_ctx_monitor_pic2 = open('pc_ctx_monitor_pic2.png', 'rb')
                bot.send_message(call.message.chat.id, text=pc_ctx_monitor_1)
                bot.send_photo(call.message.chat.id, pc_ctx_monitor_pic1)
                bot.send_message(call.message.chat.id, text=pc_ctx_monitor_2)
                bot.send_photo(call.message.chat.id, pc_ctx_monitor_pic2)
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text='–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞ 2 –º–æ–Ω–∏—Ç–æ—Ä–∞:', reply_markup=None)
            if call.data == 'default_browser':
                ctx_server = open('ctx_default_program.txt', encoding='UTF-8').read()
                ctx_default_1 = open('ctx_default_1.png', 'rb')
                ctx_default_2 = open('ctx_default_2.png', 'rb')
                ctx_default_3 = open('ctx_default_3.png', 'rb')
                bot.send_message(call.message.chat.id, text=ctx_server)
                bot.send_photo(call.message.chat.id, ctx_default_1)
                bot.send_photo(call.message.chat.id, ctx_default_2)
                bot.send_photo(call.message.chat.id, ctx_default_3)
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text='–ë—Ä–∞—É–∑–µ—Ä –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é:', reply_markup=None)
            if call.data == 'bookmarks':
                browser_bookmarks = open('browser_bookmarks.txt', encoding='UTF-8').read()
                browser_bookmarks_pic1 = open('browser_bookmarks_pic1.png', 'rb')
                browser_bookmarks_pic2 = open('browser_bookmarks_pic2.png', 'rb')
                bot.send_message(call.message.chat.id, text=browser_bookmarks)
                bot.send_photo(call.message.chat.id, browser_bookmarks_pic1)
                bot.send_photo(call.message.chat.id, browser_bookmarks_pic2)
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text='–ö–∞–∫ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∑–∞–∫–ª–∞–¥–∫–∏:', reply_markup=None)
            if call.data == 'clean_cache':
                browser_cache_1 = open('browser_cache_1.txt', encoding='UTF-8').read()
                browser_cache_2 = open('browser_cache_2.txt', encoding='UTF-8').read()
                browser_cache_3 = open('browser_cache_3.txt', encoding='UTF-8').read()
                browser_cache_pic1 = open('browser_cache_pic1.png', 'rb')
                browser_cache_pic2 = open('browser_cache_pic2.png', 'rb')
                bot.send_message(call.message.chat.id, text=browser_cache_1)
                bot.send_photo(call.message.chat.id, browser_cache_pic1)
                bot.send_message(call.message.chat.id, text=browser_cache_2)
                bot.send_photo(call.message.chat.id, browser_cache_pic2)
                bot.send_message(call.message.chat.id, text=browser_cache_3)
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text='–û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞:', reply_markup=None)
            if call.data == 'domain_pass_change':
                pass_domain = open('pass_domain.txt', encoding='UTF-8').read()
                bot.send_message(call.message.chat.id, text=pass_domain)
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text='–ö–∞–∫ —Å–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å –æ—Ç —Å–∏—Å—Ç–µ–º—ã:', reply_markup=None)
            if call.data == 'another_password':
                tickets_another_account = open('tickets_another_account.txt', encoding='UTF-8').read()
                tickets_another_account_pic = open('tickets_another_account_pic.png', 'rb')
                bot.send_message(call.message.chat.id, text=tickets_another_account)
                bot.send_photo(call.message.chat.id, tickets_another_account_pic)
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text='–ü–∞—Ä–æ–ª—å –æ—Ç –≤—Ç–æ—Ä–æ–π –£–ó:', reply_markup=None)
            if call.data == 'print_on_printer':
                printer = open('printer.txt', encoding='UTF-8').read()
                bot.send_message(call.message.chat.id, text=printer)
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text='–ü–µ—á–∞—Ç—å –Ω–∞ –ø—Ä–∏–Ω—Ç–µ—Ä–µ:', reply_markup=None)


if __name__ == '__main__':
    bot.polling(none_stop=True)
